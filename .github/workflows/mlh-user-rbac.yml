name: 'RBAC for mlh-user'

on:
  workflow_dispatch:
      
env:
  EKS_REGION: "us-east-1"
  EKS_CLUSTER: "prod-eks"

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(<kubectl.sha256) kubectl" | sha256sum --check

          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          
          kubectl version --client

      - name: Check AWS version
        run: |
          aws --version
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $EKS_REGION
          aws sts get-caller-identity
          
      - name: Connect to EKS cluster 
        run: aws eks --region $EKS_REGION update-kubeconfig --name $EKS_CLUSTER

      # Check if mlh-user Service Account already exists
      - name: Check if mlh-user Service Account already exists
        run: |
          sleep 180
          if kubectl get sa mlh-user &> /dev/null; then
            echo "mlh-user already exists, skipping create Service Account."
            echo "ServiceAccountExists=true" >> $GITHUB_ENV
          else
            echo "mlh-user not found, proceeding with creating Service Account."
            echo "ServiceAccountExists=false" >> $GITHUB_ENV
          fi   

      
      # Creat mlh-user Service Account
      - name: Create mlh-user Service Account
        if: env.ServiceAccountExists == 'false'
        run: kubectl create sa mlh-user
      
      # Verify deployment
      - name: Check Service Account 
        run: kubectl get sa mlh-user

      # Apply RBAC for mlh-user Service Account
      - name: Apply RBAC for mlh-user Service Account
        run: kubectl apply -f infrastructure-plan/k8s-RBAC/mlh-user-rbac.yml
